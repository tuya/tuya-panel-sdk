// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TYIpcStepButton default 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderRadius": 6,
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "space-between",
        "width": 220,
      },
      Object {},
    ]
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
    onLongPress={[Function]}
    onPress={[Function]}
    onPressOut={[Function]}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  </TouchableOpacity>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      keyboardType="numeric"
      onChangeText={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#333",
            "fontSize": 20,
            "fontWeight": "600",
            "padding": 0,
            "textAlign": "right",
          },
          Object {},
        ]
      }
      underlineColorAndroid="transparent"
      value="1"
    />
  </View>
  <TouchableOpacity
    activeOpacity={0.2}
    onLongPress={[Function]}
    onPress={[Function]}
    onPressOut={[Function]}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  </TouchableOpacity>
</View>
`;

exports[`TYIpcStepButton input 1`] = `
<StepButton
  addButton={
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  }
  containerStyle={Object {}}
  initialValue={1}
  max={100}
  min={1}
  numStyle={Object {}}
  onValueChange={[Function]}
  reduceButton={
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  }
  speed={0.5}
  step={1}
  subUnitStyle={Object {}}
  unitStyle={Object {}}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 6,
          "flexDirection": "row",
          "height": 44,
          "justifyContent": "space-between",
          "width": 220,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderRadius": 6,
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "space-between",
            "width": 220,
          },
          Object {},
        ]
      }
    >
      <TouchableOpacity
        activeOpacity={0.2}
        onLongPress={[Function]}
        onPress={[Function]}
        onPressOut={[Function]}
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "width": 44,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "height": 44,
                      "justifyContent": "center",
                      "width": 44,
                    }
                  }
                >
                  <Image
                    source={1}
                  >
                    <Image
                      source={1}
                    />
                  </Image>
                </View>
              </View>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
      <View
        style={
          Object {
            "alignItems": "baseline",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "baseline",
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Array [
                Object {
                  "color": "#333",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "padding": 0,
                  "textAlign": "right",
                },
                Object {},
              ]
            }
            underlineColorAndroid="transparent"
            value="1"
          >
            <TextInput
              allowFontScaling={true}
              keyboardType="numeric"
              onChangeText={[Function]}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "color": "#333",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "padding": 0,
                    "textAlign": "right",
                  },
                  Object {},
                ]
              }
              underlineColorAndroid="transparent"
              value="1"
            />
          </TextInput>
        </View>
      </View>
      <TouchableOpacity
        activeOpacity={0.2}
        onLongPress={[Function]}
        onPress={[Function]}
        onPressOut={[Function]}
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "width": 44,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "height": 44,
                      "justifyContent": "center",
                      "width": 44,
                    }
                  }
                >
                  <Image
                    source={1}
                  >
                    <Image
                      source={1}
                    />
                  </Image>
                </View>
              </View>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </View>
  </View>
</StepButton>
`;

exports[`TYIpcStepButton other param 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderRadius": 6,
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "space-between",
        "width": 220,
      },
      Object {
        "width": 200,
      },
    ]
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
    onLongPress={[Function]}
    onPress={[Function]}
    onPressOut={[Function]}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  </TouchableOpacity>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      keyboardType="numeric"
      onChangeText={[Function]}
      rejectResponderTermination={true}
      style={
        Array [
          Object {
            "color": "#333",
            "fontSize": 20,
            "fontWeight": "600",
            "padding": 0,
            "textAlign": "right",
          },
          Object {},
        ]
      }
      underlineColorAndroid="transparent"
      value="1"
    />
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "color": "#666",
            "fontSize": 14,
            "marginLeft": 4,
          },
          Object {},
        ]
      }
      type={null}
      weight={null}
    >
      m
    </TYText>
  </View>
  <TouchableOpacity
    activeOpacity={0.2}
    onLongPress={[Function]}
    onPress={[Function]}
    onPressOut={[Function]}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  </TouchableOpacity>
</View>
`;

exports[`TYIpcStepButton press 1`] = `
<StepButton
  addButton={
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  }
  containerStyle={
    Object {
      "width": 200,
    }
  }
  initialValue={1}
  max={200}
  min={0}
  numStyle={Object {}}
  onValueChange={[Function]}
  reduceButton={
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 44,
          "justifyContent": "center",
          "width": 44,
        }
      }
    >
      <Image
        source={1}
      />
    </View>
  }
  speed={0.5}
  step={5}
  subUnitStyle={Object {}}
  unit="m"
  unitStyle={Object {}}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 6,
          "flexDirection": "row",
          "height": 44,
          "justifyContent": "space-between",
          "width": 220,
        },
        Object {
          "width": 200,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderRadius": 6,
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "space-between",
            "width": 220,
          },
          Object {
            "width": 200,
          },
        ]
      }
    >
      <TouchableOpacity
        activeOpacity={0.2}
        onLongPress={[Function]}
        onPress={[Function]}
        onPressOut={[Function]}
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "width": 44,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "height": 44,
                      "justifyContent": "center",
                      "width": 44,
                    }
                  }
                >
                  <Image
                    source={1}
                  >
                    <Image
                      source={1}
                    />
                  </Image>
                </View>
              </View>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
      <View
        style={
          Object {
            "alignItems": "baseline",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "baseline",
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Array [
                Object {
                  "color": "#333",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "padding": 0,
                  "textAlign": "right",
                },
                Object {},
              ]
            }
            underlineColorAndroid="transparent"
            value="1"
          >
            <TextInput
              allowFontScaling={true}
              keyboardType="numeric"
              onChangeText={[Function]}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "color": "#333",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "padding": 0,
                    "textAlign": "right",
                  },
                  Object {},
                ]
              }
              underlineColorAndroid="transparent"
              value="1"
            />
          </TextInput>
          <TYText
            align={null}
            color={null}
            size={null}
            style={
              Array [
                Object {
                  "color": "#666",
                  "fontSize": 14,
                  "marginLeft": 4,
                },
                Object {},
              ]
            }
            type={null}
            weight={null}
          >
            <Styled(Text)
              align={null}
              allowFontScaling={false}
              color={null}
              size={14}
              style={
                Array [
                  Object {
                    "color": "#666",
                    "fontSize": 14,
                    "marginLeft": 4,
                  },
                  Object {},
                ]
              }
              type={null}
              weight={null}
            >
              <Text
                align={null}
                allowFontScaling={false}
                color={null}
                size={14}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#333",
                      "fontSize": 14,
                    },
                    Array [
                      Object {
                        "color": "#666",
                        "fontSize": 14,
                        "marginLeft": 4,
                      },
                      Object {},
                    ],
                  ]
                }
                type={null}
                weight={null}
              >
                <Text
                  align={null}
                  allowFontScaling={false}
                  color={null}
                  size={14}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#333",
                        "fontSize": 14,
                      },
                      Array [
                        Object {
                          "color": "#666",
                          "fontSize": 14,
                          "marginLeft": 4,
                        },
                        Object {},
                      ],
                    ]
                  }
                  type={null}
                  weight={null}
                >
                  m
                </Text>
              </Text>
            </Styled(Text)>
          </TYText>
        </View>
      </View>
      <TouchableOpacity
        activeOpacity={0.2}
        onLongPress={[Function]}
        onPress={[Function]}
        onPressOut={[Function]}
      >
        <AnimatedComponent
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "width": 44,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "height": 44,
                      "justifyContent": "center",
                      "width": 44,
                    }
                  }
                >
                  <Image
                    source={1}
                  >
                    <Image
                      source={1}
                    />
                  </Image>
                </View>
              </View>
            </View>
          </View>
        </AnimatedComponent>
      </TouchableOpacity>
    </View>
  </View>
</StepButton>
`;
