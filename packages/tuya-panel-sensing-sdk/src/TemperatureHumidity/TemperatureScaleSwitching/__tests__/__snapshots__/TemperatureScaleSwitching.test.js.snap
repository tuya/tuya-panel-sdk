// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultiSlider basic demo 1`] = `
<FlatList
  ItemSeparatorComponent={[Function]}
  data={
    Array [
      Object {
        "action": undefined,
        "arrow": true,
        "dps": Array [
          "custom_unit_convert",
        ],
        "id": "custom_unit_convert",
        "onPress": [Function],
        "show": true,
        "showIcon": false,
        "theme": Object {
          "cellBg": "#ffffff",
          "descFontColor": "#999",
          "fontColor": "#333333",
          "subFontColor": "#999",
        },
        "title": "jioji",
      },
    ]
  }
  disableVirtualization={false}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onEndReachedThreshold={2}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  style={
    Array [
      Object {
        "borderRadius": 32,
      },
      undefined,
    ]
  }
  updateCellsBatchingPeriod={50}
  windowSize={21}
/>
`;

exports[`MultiSlider basic demo1 1`] = `
<TemperatureScaleSwitching>
  <FlatList
    ItemSeparatorComponent={[Function]}
    data={
      Array [
        Object {
          "action": undefined,
          "arrow": true,
          "dps": Array [
            "custom_unit_convert",
          ],
          "id": "custom_unit_convert",
          "onPress": [Function],
          "show": true,
          "showIcon": false,
          "theme": Object {
            "cellBg": "#ffffff",
            "descFontColor": "#999",
            "fontColor": "#333333",
            "subFontColor": "#999",
          },
          "title": undefined,
        },
      ]
    }
    disableVirtualization={false}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onEndReachedThreshold={2}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    style={
      Array [
        Object {
          "borderRadius": 32,
        },
        undefined,
      ]
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <VirtualizedList
      ItemSeparatorComponent={[Function]}
      data={
        Array [
          Object {
            "action": undefined,
            "arrow": true,
            "dps": Array [
              "custom_unit_convert",
            ],
            "id": "custom_unit_convert",
            "onPress": [Function],
            "show": true,
            "showIcon": false,
            "theme": Object {
              "cellBg": "#ffffff",
              "descFontColor": "#999",
              "fontColor": "#333333",
              "subFontColor": "#999",
            },
            "title": undefined,
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      style={
        Array [
          Object {
            "borderRadius": 32,
          },
          undefined,
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <ScrollViewMock
        ItemSeparatorComponent={[Function]}
        data={
          Array [
            Object {
              "action": undefined,
              "arrow": true,
              "dps": Array [
                "custom_unit_convert",
              ],
              "id": "custom_unit_convert",
              "onPress": [Function],
              "show": true,
              "showIcon": false,
              "theme": Object {
                "cellBg": "#ffffff",
                "descFontColor": "#999",
                "fontColor": "#333333",
                "subFontColor": "#999",
              },
              "title": undefined,
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Array [
            Object {
              "borderRadius": 32,
            },
            undefined,
          ]
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <_class
          ItemSeparatorComponent={[Function]}
          data={
            Array [
              Object {
                "action": undefined,
                "arrow": true,
                "dps": Array [
                  "custom_unit_convert",
                ],
                "id": "custom_unit_convert",
                "onPress": [Function],
                "show": true,
                "showIcon": false,
                "theme": Object {
                  "cellBg": "#ffffff",
                  "descFontColor": "#999",
                  "fontColor": "#333333",
                  "subFontColor": "#999",
                },
                "title": undefined,
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "borderRadius": 32,
              },
              undefined,
            ]
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={
              Array [
                Object {
                  "action": undefined,
                  "arrow": true,
                  "dps": Array [
                    "custom_unit_convert",
                  ],
                  "id": "custom_unit_convert",
                  "onPress": [Function],
                  "show": true,
                  "showIcon": false,
                  "theme": Object {
                    "cellBg": "#ffffff",
                    "descFontColor": "#999",
                    "fontColor": "#333333",
                    "subFontColor": "#999",
                  },
                  "title": undefined,
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            style={
              Array [
                Object {
                  "borderRadius": 32,
                },
                undefined,
              ]
            }
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View>
                <CellRenderer
                  cellKey="0"
                  fillRateHelper={
                    FillRateHelper {
                      "_anyBlankStartTime": null,
                      "_enabled": false,
                      "_getFrameMetrics": [Function],
                      "_info": Info {
                        "any_blank_count": 0,
                        "any_blank_ms": 0,
                        "any_blank_speed_sum": 0,
                        "mostly_blank_count": 0,
                        "mostly_blank_ms": 0,
                        "pixels_blank": 0,
                        "pixels_sampled": 0,
                        "pixels_scrolled": 0,
                        "sample_count": 0,
                        "total_time_spent": 0,
                      },
                      "_mostlyBlankStartTime": null,
                      "_samplesStartTime": null,
                    }
                  }
                  horizontal={false}
                  index={0}
                  inversionStyle={null}
                  item={
                    Object {
                      "action": undefined,
                      "arrow": true,
                      "dps": Array [
                        "custom_unit_convert",
                      ],
                      "id": "custom_unit_convert",
                      "onPress": [Function],
                      "show": true,
                      "showIcon": false,
                      "theme": Object {
                        "cellBg": "#ffffff",
                        "descFontColor": "#999",
                        "fontColor": "#333333",
                        "subFontColor": "#999",
                      },
                      "title": undefined,
                    }
                  }
                  key="0"
                  onLayout={[Function]}
                  onUnmount={[Function]}
                  onUpdateSeparators={[Function]}
                  parentProps={
                    Object {
                      "ItemSeparatorComponent": [Function],
                      "data": Array [
                        Object {
                          "action": undefined,
                          "arrow": true,
                          "dps": Array [
                            "custom_unit_convert",
                          ],
                          "id": "custom_unit_convert",
                          "onPress": [Function],
                          "show": true,
                          "showIcon": false,
                          "theme": Object {
                            "cellBg": "#ffffff",
                            "descFontColor": "#999",
                            "fontColor": "#333333",
                            "subFontColor": "#999",
                          },
                          "title": undefined,
                        },
                      ],
                      "disableVirtualization": false,
                      "getItem": [Function],
                      "getItemCount": [Function],
                      "horizontal": false,
                      "initialNumToRender": 10,
                      "keyExtractor": [Function],
                      "maxToRenderPerBatch": 10,
                      "numColumns": 1,
                      "onEndReachedThreshold": 2,
                      "removeClippedSubviews": false,
                      "renderItem": [Function],
                      "scrollEventThrottle": 50,
                      "style": Array [
                        Object {
                          "borderRadius": 32,
                        },
                        undefined,
                      ],
                      "updateCellsBatchingPeriod": 50,
                      "viewabilityConfigCallbackPairs": Array [],
                      "windowSize": 21,
                    }
                  }
                >
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <TYListItem
                        Action={null}
                        Icon={null}
                        actionDisabled={false}
                        actionType="auto"
                        arrow={true}
                        arrowColor={null}
                        arrowUseIcon={false}
                        disabled={false}
                        iconColor={null}
                        iconSize={null}
                        iconType="auto"
                        imageFollowIconColor={true}
                        needUpdate={true}
                        onPress={[Function]}
                        styles={
                          Object {
                            "container": Array [
                              Object {
                                "alignItems": "center",
                                "height": 64,
                                "justifyContent": "center",
                              },
                              undefined,
                            ],
                            "contentLeft": Array [
                              Object {
                                "marginLeft": 2,
                                "marginRight": 4,
                                "position": "absolute",
                              },
                              Object {
                                "top": 20,
                              },
                            ],
                          }
                        }
                        subTitle={null}
                        theme={
                          Object {
                            "cellBg": "#ffffff",
                            "descFontColor": "#999",
                            "fontColor": "#333333",
                            "subFontColor": "#999",
                          }
                        }
                        title={null}
                        useART={false}
                      >
                        <Styled(TouchableOpacity)
                          Action={null}
                          Icon={null}
                          actionType="auto"
                          activeOpacity={0.8}
                          arrow={true}
                          arrowColor={null}
                          arrowUseIcon={false}
                          disabled={false}
                          iconColor={null}
                          iconSize={null}
                          iconType="auto"
                          imageFollowIconColor={true}
                          needUpdate={true}
                          onPress={[Function]}
                          style={
                            Array [
                              false,
                              undefined,
                              Object {
                                "backgroundColor": "#ffffff",
                              },
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "height": 64,
                                  "justifyContent": "center",
                                },
                                undefined,
                              ],
                            ]
                          }
                          useART={false}
                        >
                          <TouchableOpacity
                            Action={null}
                            Icon={null}
                            actionType="auto"
                            activeOpacity={0.8}
                            arrow={true}
                            arrowColor={null}
                            arrowUseIcon={false}
                            disabled={false}
                            iconColor={null}
                            iconSize={null}
                            iconType="auto"
                            imageFollowIconColor={true}
                            needUpdate={true}
                            onPress={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#fff",
                                  "borderRadius": 0,
                                  "flexGrow": 0,
                                  "marginBottom": 0,
                                  "marginLeft": 0,
                                  "marginRight": 0,
                                  "marginTop": 0,
                                  "minHeight": 48,
                                },
                                Array [
                                  false,
                                  undefined,
                                  Object {
                                    "backgroundColor": "#ffffff",
                                  },
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "height": 64,
                                      "justifyContent": "center",
                                    },
                                    undefined,
                                  ],
                                ],
                              ]
                            }
                            useART={false}
                          >
                            <AnimatedComponent
                              accessible={true}
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Array [
                                    Object {
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#fff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                    },
                                    Array [
                                      false,
                                      undefined,
                                      Object {
                                        "backgroundColor": "#ffffff",
                                      },
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "height": 64,
                                          "justifyContent": "center",
                                        },
                                        undefined,
                                      ],
                                    ],
                                  ],
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                            >
                              <View
                                accessible={true}
                                isTVSelectable={true}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "alignSelf": "stretch",
                                    "backgroundColor": "#ffffff",
                                    "borderRadius": 0,
                                    "flexGrow": 0,
                                    "height": 64,
                                    "justifyContent": "center",
                                    "marginBottom": 0,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "marginTop": 0,
                                    "minHeight": 48,
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#ffffff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "height": 64,
                                      "justifyContent": "center",
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <Styled(View)
                                    disabled={false}
                                    style={
                                      Array [
                                        false,
                                        undefined,
                                        undefined,
                                      ]
                                    }
                                  >
                                    <View
                                      disabled={false}
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "borderRadius": 0,
                                            "flexDirection": "row",
                                            "opacity": 1,
                                            "paddingBottom": 12,
                                            "paddingLeft": 32,
                                            "paddingRight": 32,
                                            "paddingTop": 12,
                                          },
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                          ],
                                        ]
                                      }
                                    >
                                      <View
                                        disabled={false}
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "borderRadius": 0,
                                              "flexDirection": "row",
                                              "opacity": 1,
                                              "paddingBottom": 12,
                                              "paddingLeft": 32,
                                              "paddingRight": 32,
                                              "paddingTop": 12,
                                            },
                                            Array [
                                              false,
                                              undefined,
                                              undefined,
                                            ],
                                          ]
                                        }
                                      >
                                        <Styled(View)>
                                          <View
                                            style={
                                              Array [
                                                Object {
                                                  "flexBasis": 0,
                                                  "flexGrow": 1,
                                                  "flexShrink": 1,
                                                  "justifyContent": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                          >
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "flexBasis": 0,
                                                    "flexGrow": 1,
                                                    "flexShrink": 1,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                            />
                                          </View>
                                        </Styled(View)>
                                        <Styled(TouchableOpacity)
                                          activeOpacity={0.8}
                                          disabled={false}
                                          onPress={[Function]}
                                        >
                                          <TouchableOpacity
                                            activeOpacity={0.8}
                                            disabled={false}
                                            onPress={[Function]}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "flexDirection": "row",
                                                  "marginLeft": 20,
                                                },
                                                undefined,
                                              ]
                                            }
                                          >
                                            <AnimatedComponent
                                              accessible={true}
                                              isTVSelectable={true}
                                              onResponderGrant={[Function]}
                                              onResponderMove={[Function]}
                                              onResponderRelease={[Function]}
                                              onResponderTerminate={[Function]}
                                              onResponderTerminationRequest={[Function]}
                                              onStartShouldSetResponder={[Function]}
                                              style={
                                                Array [
                                                  Array [
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                    },
                                                    undefined,
                                                  ],
                                                  Object {
                                                    "opacity": 1,
                                                  },
                                                ]
                                              }
                                            >
                                              <View
                                                accessible={true}
                                                isTVSelectable={true}
                                                onResponderGrant={[Function]}
                                                onResponderMove={[Function]}
                                                onResponderRelease={[Function]}
                                                onResponderTerminate={[Function]}
                                                onResponderTerminationRequest={[Function]}
                                                onStartShouldSetResponder={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "flexDirection": "row",
                                                    "marginLeft": 20,
                                                    "opacity": 1,
                                                  }
                                                }
                                              >
                                                <View
                                                  accessible={true}
                                                  isTVSelectable={true}
                                                  onResponderGrant={[Function]}
                                                  onResponderMove={[Function]}
                                                  onResponderRelease={[Function]}
                                                  onResponderTerminate={[Function]}
                                                  onResponderTerminationRequest={[Function]}
                                                  onStartShouldSetResponder={[Function]}
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                      "opacity": 1,
                                                    }
                                                  }
                                                >
                                                  <StyledArrowImage>
                                                    <StyledImage
                                                      imageFollowIconColor={true}
                                                      source={1}
                                                      style={
                                                        Object {
                                                          "marginLeft": 12,
                                                        }
                                                      }
                                                    >
                                                      <WithTheme(ThemeConsumer)>
                                                        <ThemeConsumer
                                                          theme={null}
                                                        >
                                                          <Image
                                                            imageFollowIconColor={true}
                                                            source={1}
                                                            style={
                                                              Array [
                                                                undefined,
                                                                Object {
                                                                  "tintColor": "rgba(51, 51, 51, 0.5)",
                                                                },
                                                                Object {
                                                                  "marginLeft": 12,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Image
                                                              imageFollowIconColor={true}
                                                              source={1}
                                                              style={
                                                                Array [
                                                                  undefined,
                                                                  Object {
                                                                    "tintColor": "rgba(51, 51, 51, 0.5)",
                                                                  },
                                                                  Object {
                                                                    "marginLeft": 12,
                                                                  },
                                                                ]
                                                              }
                                                            />
                                                          </Image>
                                                        </ThemeConsumer>
                                                      </WithTheme(ThemeConsumer)>
                                                    </StyledImage>
                                                  </StyledArrowImage>
                                                </View>
                                              </View>
                                            </AnimatedComponent>
                                          </TouchableOpacity>
                                        </Styled(TouchableOpacity)>
                                      </View>
                                    </View>
                                  </Styled(View)>
                                </View>
                              </View>
                            </AnimatedComponent>
                          </TouchableOpacity>
                        </Styled(TouchableOpacity)>
                      </TYListItem>
                    </View>
                  </View>
                </CellRenderer>
              </View>
            </View>
          </RCTScrollView>
        </_class>
      </ScrollViewMock>
    </VirtualizedList>
  </FlatList>
</TemperatureScaleSwitching>
`;

exports[`MultiSlider basic demo2 1`] = `
<FlatList
  ItemSeparatorComponent={[Function]}
  data={
    Array [
      Object {
        "action": undefined,
        "arrow": true,
        "dps": Array [
          "custom_unit_convert",
        ],
        "id": "custom_unit_convert",
        "onPress": [Function],
        "show": true,
        "showIcon": false,
        "theme": Object {
          "cellBg": "#ffffff",
          "descFontColor": "#999",
          "fontColor": "#333333",
          "subFontColor": "#999",
        },
        "title": "jioji",
      },
    ]
  }
  disableVirtualization={false}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onEndReachedThreshold={2}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  style={
    Array [
      Object {
        "borderRadius": 32,
      },
      undefined,
    ]
  }
  updateCellsBatchingPeriod={50}
  windowSize={21}
/>
`;

exports[`MultiSlider basic demo3 1`] = `
<TemperatureScaleSwitching>
  <FlatList
    ItemSeparatorComponent={[Function]}
    data={
      Array [
        Object {
          "action": undefined,
          "arrow": true,
          "dps": Array [
            "custom_unit_convert",
          ],
          "id": "custom_unit_convert",
          "onPress": [Function],
          "show": true,
          "showIcon": false,
          "theme": Object {
            "cellBg": "#ffffff",
            "descFontColor": "#999",
            "fontColor": "#333333",
            "subFontColor": "#999",
          },
          "title": undefined,
        },
      ]
    }
    disableVirtualization={false}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onEndReachedThreshold={2}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    style={
      Array [
        Object {
          "borderRadius": 32,
        },
        undefined,
      ]
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <VirtualizedList
      ItemSeparatorComponent={[Function]}
      data={
        Array [
          Object {
            "action": undefined,
            "arrow": true,
            "dps": Array [
              "custom_unit_convert",
            ],
            "id": "custom_unit_convert",
            "onPress": [Function],
            "show": true,
            "showIcon": false,
            "theme": Object {
              "cellBg": "#ffffff",
              "descFontColor": "#999",
              "fontColor": "#333333",
              "subFontColor": "#999",
            },
            "title": undefined,
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      style={
        Array [
          Object {
            "borderRadius": 32,
          },
          undefined,
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <ScrollViewMock
        ItemSeparatorComponent={[Function]}
        data={
          Array [
            Object {
              "action": undefined,
              "arrow": true,
              "dps": Array [
                "custom_unit_convert",
              ],
              "id": "custom_unit_convert",
              "onPress": [Function],
              "show": true,
              "showIcon": false,
              "theme": Object {
                "cellBg": "#ffffff",
                "descFontColor": "#999",
                "fontColor": "#333333",
                "subFontColor": "#999",
              },
              "title": undefined,
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Array [
            Object {
              "borderRadius": 32,
            },
            undefined,
          ]
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <_class
          ItemSeparatorComponent={[Function]}
          data={
            Array [
              Object {
                "action": undefined,
                "arrow": true,
                "dps": Array [
                  "custom_unit_convert",
                ],
                "id": "custom_unit_convert",
                "onPress": [Function],
                "show": true,
                "showIcon": false,
                "theme": Object {
                  "cellBg": "#ffffff",
                  "descFontColor": "#999",
                  "fontColor": "#333333",
                  "subFontColor": "#999",
                },
                "title": undefined,
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "borderRadius": 32,
              },
              undefined,
            ]
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={
              Array [
                Object {
                  "action": undefined,
                  "arrow": true,
                  "dps": Array [
                    "custom_unit_convert",
                  ],
                  "id": "custom_unit_convert",
                  "onPress": [Function],
                  "show": true,
                  "showIcon": false,
                  "theme": Object {
                    "cellBg": "#ffffff",
                    "descFontColor": "#999",
                    "fontColor": "#333333",
                    "subFontColor": "#999",
                  },
                  "title": undefined,
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            style={
              Array [
                Object {
                  "borderRadius": 32,
                },
                undefined,
              ]
            }
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View>
                <CellRenderer
                  cellKey="0"
                  fillRateHelper={
                    FillRateHelper {
                      "_anyBlankStartTime": null,
                      "_enabled": false,
                      "_getFrameMetrics": [Function],
                      "_info": Info {
                        "any_blank_count": 0,
                        "any_blank_ms": 0,
                        "any_blank_speed_sum": 0,
                        "mostly_blank_count": 0,
                        "mostly_blank_ms": 0,
                        "pixels_blank": 0,
                        "pixels_sampled": 0,
                        "pixels_scrolled": 0,
                        "sample_count": 0,
                        "total_time_spent": 0,
                      },
                      "_mostlyBlankStartTime": null,
                      "_samplesStartTime": null,
                    }
                  }
                  horizontal={false}
                  index={0}
                  inversionStyle={null}
                  item={
                    Object {
                      "action": undefined,
                      "arrow": true,
                      "dps": Array [
                        "custom_unit_convert",
                      ],
                      "id": "custom_unit_convert",
                      "onPress": [Function],
                      "show": true,
                      "showIcon": false,
                      "theme": Object {
                        "cellBg": "#ffffff",
                        "descFontColor": "#999",
                        "fontColor": "#333333",
                        "subFontColor": "#999",
                      },
                      "title": undefined,
                    }
                  }
                  key="0"
                  onLayout={[Function]}
                  onUnmount={[Function]}
                  onUpdateSeparators={[Function]}
                  parentProps={
                    Object {
                      "ItemSeparatorComponent": [Function],
                      "data": Array [
                        Object {
                          "action": undefined,
                          "arrow": true,
                          "dps": Array [
                            "custom_unit_convert",
                          ],
                          "id": "custom_unit_convert",
                          "onPress": [Function],
                          "show": true,
                          "showIcon": false,
                          "theme": Object {
                            "cellBg": "#ffffff",
                            "descFontColor": "#999",
                            "fontColor": "#333333",
                            "subFontColor": "#999",
                          },
                          "title": undefined,
                        },
                      ],
                      "disableVirtualization": false,
                      "getItem": [Function],
                      "getItemCount": [Function],
                      "horizontal": false,
                      "initialNumToRender": 10,
                      "keyExtractor": [Function],
                      "maxToRenderPerBatch": 10,
                      "numColumns": 1,
                      "onEndReachedThreshold": 2,
                      "removeClippedSubviews": false,
                      "renderItem": [Function],
                      "scrollEventThrottle": 50,
                      "style": Array [
                        Object {
                          "borderRadius": 32,
                        },
                        undefined,
                      ],
                      "updateCellsBatchingPeriod": 50,
                      "viewabilityConfigCallbackPairs": Array [],
                      "windowSize": 21,
                    }
                  }
                >
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <TYListItem
                        Action={null}
                        Icon={null}
                        actionDisabled={false}
                        actionType="auto"
                        arrow={true}
                        arrowColor={null}
                        arrowUseIcon={false}
                        disabled={false}
                        iconColor={null}
                        iconSize={null}
                        iconType="auto"
                        imageFollowIconColor={true}
                        needUpdate={true}
                        onPress={[Function]}
                        styles={
                          Object {
                            "container": Array [
                              Object {
                                "alignItems": "center",
                                "height": 64,
                                "justifyContent": "center",
                              },
                              undefined,
                            ],
                            "contentLeft": Array [
                              Object {
                                "marginLeft": 2,
                                "marginRight": 4,
                                "position": "absolute",
                              },
                              Object {
                                "top": 20,
                              },
                            ],
                          }
                        }
                        subTitle={null}
                        theme={
                          Object {
                            "cellBg": "#ffffff",
                            "descFontColor": "#999",
                            "fontColor": "#333333",
                            "subFontColor": "#999",
                          }
                        }
                        title={null}
                        useART={false}
                      >
                        <Styled(TouchableOpacity)
                          Action={null}
                          Icon={null}
                          actionType="auto"
                          activeOpacity={0.8}
                          arrow={true}
                          arrowColor={null}
                          arrowUseIcon={false}
                          disabled={false}
                          iconColor={null}
                          iconSize={null}
                          iconType="auto"
                          imageFollowIconColor={true}
                          needUpdate={true}
                          onPress={[Function]}
                          style={
                            Array [
                              false,
                              undefined,
                              Object {
                                "backgroundColor": "#ffffff",
                              },
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "height": 64,
                                  "justifyContent": "center",
                                },
                                undefined,
                              ],
                            ]
                          }
                          useART={false}
                        >
                          <TouchableOpacity
                            Action={null}
                            Icon={null}
                            actionType="auto"
                            activeOpacity={0.8}
                            arrow={true}
                            arrowColor={null}
                            arrowUseIcon={false}
                            disabled={false}
                            iconColor={null}
                            iconSize={null}
                            iconType="auto"
                            imageFollowIconColor={true}
                            needUpdate={true}
                            onPress={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#fff",
                                  "borderRadius": 0,
                                  "flexGrow": 0,
                                  "marginBottom": 0,
                                  "marginLeft": 0,
                                  "marginRight": 0,
                                  "marginTop": 0,
                                  "minHeight": 48,
                                },
                                Array [
                                  false,
                                  undefined,
                                  Object {
                                    "backgroundColor": "#ffffff",
                                  },
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "height": 64,
                                      "justifyContent": "center",
                                    },
                                    undefined,
                                  ],
                                ],
                              ]
                            }
                            useART={false}
                          >
                            <AnimatedComponent
                              accessible={true}
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Array [
                                    Object {
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#fff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                    },
                                    Array [
                                      false,
                                      undefined,
                                      Object {
                                        "backgroundColor": "#ffffff",
                                      },
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "height": 64,
                                          "justifyContent": "center",
                                        },
                                        undefined,
                                      ],
                                    ],
                                  ],
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                            >
                              <View
                                accessible={true}
                                isTVSelectable={true}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "alignSelf": "stretch",
                                    "backgroundColor": "#ffffff",
                                    "borderRadius": 0,
                                    "flexGrow": 0,
                                    "height": 64,
                                    "justifyContent": "center",
                                    "marginBottom": 0,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "marginTop": 0,
                                    "minHeight": 48,
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "alignSelf": "stretch",
                                      "backgroundColor": "#ffffff",
                                      "borderRadius": 0,
                                      "flexGrow": 0,
                                      "height": 64,
                                      "justifyContent": "center",
                                      "marginBottom": 0,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "marginTop": 0,
                                      "minHeight": 48,
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <Styled(View)
                                    disabled={false}
                                    style={
                                      Array [
                                        false,
                                        undefined,
                                        undefined,
                                      ]
                                    }
                                  >
                                    <View
                                      disabled={false}
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "borderRadius": 0,
                                            "flexDirection": "row",
                                            "opacity": 1,
                                            "paddingBottom": 12,
                                            "paddingLeft": 32,
                                            "paddingRight": 32,
                                            "paddingTop": 12,
                                          },
                                          Array [
                                            false,
                                            undefined,
                                            undefined,
                                          ],
                                        ]
                                      }
                                    >
                                      <View
                                        disabled={false}
                                        style={
                                          Array [
                                            Object {
                                              "alignItems": "center",
                                              "borderRadius": 0,
                                              "flexDirection": "row",
                                              "opacity": 1,
                                              "paddingBottom": 12,
                                              "paddingLeft": 32,
                                              "paddingRight": 32,
                                              "paddingTop": 12,
                                            },
                                            Array [
                                              false,
                                              undefined,
                                              undefined,
                                            ],
                                          ]
                                        }
                                      >
                                        <Styled(View)>
                                          <View
                                            style={
                                              Array [
                                                Object {
                                                  "flexBasis": 0,
                                                  "flexGrow": 1,
                                                  "flexShrink": 1,
                                                  "justifyContent": "center",
                                                },
                                                undefined,
                                              ]
                                            }
                                          >
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "flexBasis": 0,
                                                    "flexGrow": 1,
                                                    "flexShrink": 1,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                                              }
                                            />
                                          </View>
                                        </Styled(View)>
                                        <Styled(TouchableOpacity)
                                          activeOpacity={0.8}
                                          disabled={false}
                                          onPress={[Function]}
                                        >
                                          <TouchableOpacity
                                            activeOpacity={0.8}
                                            disabled={false}
                                            onPress={[Function]}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "flexDirection": "row",
                                                  "marginLeft": 20,
                                                },
                                                undefined,
                                              ]
                                            }
                                          >
                                            <AnimatedComponent
                                              accessible={true}
                                              isTVSelectable={true}
                                              onResponderGrant={[Function]}
                                              onResponderMove={[Function]}
                                              onResponderRelease={[Function]}
                                              onResponderTerminate={[Function]}
                                              onResponderTerminationRequest={[Function]}
                                              onStartShouldSetResponder={[Function]}
                                              style={
                                                Array [
                                                  Array [
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                    },
                                                    undefined,
                                                  ],
                                                  Object {
                                                    "opacity": 1,
                                                  },
                                                ]
                                              }
                                            >
                                              <View
                                                accessible={true}
                                                isTVSelectable={true}
                                                onResponderGrant={[Function]}
                                                onResponderMove={[Function]}
                                                onResponderRelease={[Function]}
                                                onResponderTerminate={[Function]}
                                                onResponderTerminationRequest={[Function]}
                                                onStartShouldSetResponder={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "flexDirection": "row",
                                                    "marginLeft": 20,
                                                    "opacity": 1,
                                                  }
                                                }
                                              >
                                                <View
                                                  accessible={true}
                                                  isTVSelectable={true}
                                                  onResponderGrant={[Function]}
                                                  onResponderMove={[Function]}
                                                  onResponderRelease={[Function]}
                                                  onResponderTerminate={[Function]}
                                                  onResponderTerminationRequest={[Function]}
                                                  onStartShouldSetResponder={[Function]}
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "marginLeft": 20,
                                                      "opacity": 1,
                                                    }
                                                  }
                                                >
                                                  <StyledArrowImage>
                                                    <StyledImage
                                                      imageFollowIconColor={true}
                                                      source={1}
                                                      style={
                                                        Object {
                                                          "marginLeft": 12,
                                                        }
                                                      }
                                                    >
                                                      <WithTheme(ThemeConsumer)>
                                                        <ThemeConsumer
                                                          theme={null}
                                                        >
                                                          <Image
                                                            imageFollowIconColor={true}
                                                            source={1}
                                                            style={
                                                              Array [
                                                                undefined,
                                                                Object {
                                                                  "tintColor": "rgba(51, 51, 51, 0.5)",
                                                                },
                                                                Object {
                                                                  "marginLeft": 12,
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <Image
                                                              imageFollowIconColor={true}
                                                              source={1}
                                                              style={
                                                                Array [
                                                                  undefined,
                                                                  Object {
                                                                    "tintColor": "rgba(51, 51, 51, 0.5)",
                                                                  },
                                                                  Object {
                                                                    "marginLeft": 12,
                                                                  },
                                                                ]
                                                              }
                                                            />
                                                          </Image>
                                                        </ThemeConsumer>
                                                      </WithTheme(ThemeConsumer)>
                                                    </StyledImage>
                                                  </StyledArrowImage>
                                                </View>
                                              </View>
                                            </AnimatedComponent>
                                          </TouchableOpacity>
                                        </Styled(TouchableOpacity)>
                                      </View>
                                    </View>
                                  </Styled(View)>
                                </View>
                              </View>
                            </AnimatedComponent>
                          </TouchableOpacity>
                        </Styled(TouchableOpacity)>
                      </TYListItem>
                    </View>
                  </View>
                </CellRenderer>
              </View>
            </View>
          </RCTScrollView>
        </_class>
      </ScrollViewMock>
    </VirtualizedList>
  </FlatList>
</TemperatureScaleSwitching>
`;
