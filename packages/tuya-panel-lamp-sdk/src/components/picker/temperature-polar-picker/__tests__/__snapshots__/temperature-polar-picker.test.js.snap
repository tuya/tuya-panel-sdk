// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TemperaturePolarPicker components basic render 1`] = `
<View
  disalbedThumbOpacity={0.4}
  hideThumb={false}
  max={1000}
  min={0}
  onChange={[Function]}
  onGrant={[Function]}
  onMove={[Function]}
  onPress={[Function]}
  onRelease={[Function]}
  opacityAnimationDuration={150}
  opacityAnimationValue={1}
  step={1}
  storageKey="temperature_polar_picker"
  style={
    Array [
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "width": 604,
      },
      undefined,
    ]
  }
  touchOffset={0}
  touchThumbRadius={0}
  value={1000}
>
  <AnimatedComponent
    style={
      Object {
        "height": 540,
        "opacity": 1,
        "width": 540,
      }
    }
  >
    <Svg
      height={540}
      preserveAspectRatio="xMidYMid meet"
      width={540}
    >
      <Defs>
        <RadialGradient
          cx={270}
          cy={270}
          fx={270}
          fy={270}
          gradientUnits="userSpaceOnUse"
          id="temp_polar_540138"
          r="50%"
          rx={270}
          ry={270}
        >
          <Stop
            key="0"
            offset="48%"
            stopColor="#FFEAC0"
            stopOpacity="1"
          />
          <Stop
            key="1"
            offset="74%"
            stopColor="#fff"
            stopOpacity="1"
          />
          <Stop
            key="2"
            offset="100%"
            stopColor="#C5EDF8"
            stopOpacity="1"
          />
        </RadialGradient>
      </Defs>
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M138 270A132 132 0 1 1 402 270A132 132 0 1 1 138 270Z"
        fill="url(#temp_polar_540138)"
      />
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M138 270A132 132 0 1 1 402 270A132 132 0 1 1 138 270Z"
        fill="url(#temp_polar_540138)"
      />
    </Svg>
  </AnimatedComponent>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
  <View
    accessibilityLabel="hueSaturationPicker"
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    pointerEvents="box-only"
    style={
      Object {
        "height": 604,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
</View>
`;

exports[`TemperaturePolarPicker components componentWillReceiveProps render 1`] = `
<View
  disalbedThumbOpacity={0.4}
  hideThumb={false}
  max={1000}
  min={0}
  onChange={[Function]}
  onGrant={[Function]}
  onMove={[Function]}
  onPress={[Function]}
  onRelease={[Function]}
  opacityAnimationDuration={150}
  opacityAnimationValue={1}
  step={1}
  storageKey="temperature_polar_picker"
  style={
    Array [
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "width": 604,
      },
      undefined,
    ]
  }
  touchOffset={0}
  touchThumbRadius={0}
  value={1000}
>
  <AnimatedComponent
    style={
      Object {
        "height": 540,
        "opacity": 1,
        "width": 540,
      }
    }
  >
    <Svg
      height={540}
      preserveAspectRatio="xMidYMid meet"
      width={540}
    >
      <Defs>
        <RadialGradient
          cx={270}
          cy={270}
          fx={270}
          fy={270}
          gradientUnits="userSpaceOnUse"
          id="temp_polar_540138"
          r="50%"
          rx={270}
          ry={270}
        >
          <Stop
            key="0"
            offset="48%"
            stopColor="#FFEAC0"
            stopOpacity="1"
          />
          <Stop
            key="1"
            offset="74%"
            stopColor="#fff"
            stopOpacity="1"
          />
          <Stop
            key="2"
            offset="100%"
            stopColor="#C5EDF8"
            stopOpacity="1"
          />
        </RadialGradient>
      </Defs>
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M138 270A132 132 0 1 1 402 270A132 132 0 1 1 138 270Z"
        fill="url(#temp_polar_540138)"
      />
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M138 270A132 132 0 1 1 402 270A132 132 0 1 1 138 270Z"
        fill="url(#temp_polar_540138)"
      />
    </Svg>
  </AnimatedComponent>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
  <View
    accessibilityLabel="hueSaturationPicker"
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    pointerEvents="box-only"
    style={
      Object {
        "height": 604,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
</View>
`;

exports[`TemperaturePolarPicker components render touch 1`] = `
<View
  disalbedThumbOpacity={0.4}
  hideThumb={false}
  max={1000}
  min={0}
  onChange={[Function]}
  onGrant={[Function]}
  onMove={[Function]}
  onPress={[Function]}
  onRelease={[Function]}
  opacityAnimationDuration={150}
  opacityAnimationValue={1}
  step={1}
  storageKey="temperature_polar_picker"
  style={
    Array [
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "width": 604,
      },
      undefined,
    ]
  }
  touchOffset={0}
  touchThumbRadius={0}
  value={1000}
>
  <AnimatedComponent
    style={
      Object {
        "height": 540,
        "opacity": 1,
        "width": 540,
      }
    }
  >
    <Svg
      height={540}
      preserveAspectRatio="xMidYMid meet"
      width={540}
    >
      <Defs>
        <RadialGradient
          cx={270}
          cy={270}
          fx={270}
          fy={270}
          gradientUnits="userSpaceOnUse"
          id="temp_polar_540270"
          r="50%"
          rx={270}
          ry={270}
        >
          <Stop
            key="0"
            offset="0%"
            stopColor="#FFEAC0"
            stopOpacity="1"
          />
          <Stop
            key="1"
            offset="50%"
            stopColor="#fff"
            stopOpacity="1"
          />
          <Stop
            key="2"
            offset="100%"
            stopColor="#C5EDF8"
            stopOpacity="1"
          />
        </RadialGradient>
      </Defs>
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M270 270A0 0 0 1 1 270 270A0 0 0 1 1 270 270Z"
        fill="url(#temp_polar_540270)"
      />
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M270 270A0 0 0 1 1 270 270A0 0 0 1 1 270 270Z"
        fill="url(#temp_polar_540270)"
      />
    </Svg>
  </AnimatedComponent>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
  <View
    accessibilityLabel="hueSaturationPicker"
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    pointerEvents="box-only"
    style={
      Object {
        "height": 604,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
</View>
`;

exports[`TemperaturePolarPicker components render touch disabled 1`] = `
<View
  disalbedThumbOpacity={0.4}
  hideThumb={false}
  max={1000}
  min={0}
  onChange={[Function]}
  onGrant={[Function]}
  onMove={[Function]}
  onPress={[Function]}
  onRelease={[Function]}
  opacityAnimationDuration={150}
  opacityAnimationValue={1}
  step={1}
  storageKey="temperature_polar_picker"
  style={
    Array [
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "width": 604,
      },
      undefined,
    ]
  }
  touchOffset={0}
  touchThumbRadius={0}
  value={1000}
>
  <AnimatedComponent
    style={
      Object {
        "height": 540,
        "opacity": 1,
        "width": 540,
      }
    }
  >
    <Svg
      height={540}
      preserveAspectRatio="xMidYMid meet"
      width={540}
    >
      <Defs>
        <RadialGradient
          cx={270}
          cy={270}
          fx={270}
          fy={270}
          gradientUnits="userSpaceOnUse"
          id="temp_polar_540138"
          r="50%"
          rx={270}
          ry={270}
        >
          <Stop
            key="0"
            offset="48%"
            stopColor="#FFEAC0"
            stopOpacity="1"
          />
          <Stop
            key="1"
            offset="74%"
            stopColor="#fff"
            stopOpacity="1"
          />
          <Stop
            key="2"
            offset="100%"
            stopColor="#C5EDF8"
            stopOpacity="1"
          />
        </RadialGradient>
      </Defs>
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M138 270A132 132 0 1 1 402 270A132 132 0 1 1 138 270Z"
        fill="url(#temp_polar_540138)"
      />
      <Path
        d="M0 270A270 270 0 1 0 540 270A270 270 0 1 0 0 270Z
    M138 270A132 132 0 1 1 402 270A132 132 0 1 1 138 270Z"
        fill="url(#temp_polar_540138)"
      />
    </Svg>
  </AnimatedComponent>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 604,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
  <View
    accessibilityLabel="hueSaturationPicker"
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    pointerEvents="box-only"
    style={
      Object {
        "height": 604,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 604,
      }
    }
  />
</View>
`;
