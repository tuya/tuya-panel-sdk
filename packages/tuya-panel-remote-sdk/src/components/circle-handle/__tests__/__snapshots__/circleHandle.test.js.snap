// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PressKey components componentWillReceiveProps0 1`] = `
<Styled(View)>
  <View
    onLayout={[Function]}
    style={
      Object {
        "opacity": 0,
        "position": "absolute",
      }
    }
  >
    <Image
      source={1}
    />
  </View>
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
    <Styled(View)
      outBgColor="#F6F6F6"
      padding={8}
      radius={200}
    >
      <Styled(View)
        padding={8}
        radius={200}
        style={null}
      >
        <Styled(View)
          padding={8}
          radius={200}
          style={
            Array [
              null,
              Object {
                "overflow": "hidden",
                "transform": Array [
                  Object {
                    "rotate": "45deg",
                  },
                ],
              },
            ]
          }
        >
          <Styled(View)
            padding={8}
            radius={200}
          />
        </Styled(View)>
      </Styled(View)>
      <Styled(View)
        padding={8}
        radius={200}
      />
      <Styled(View)
        centerBgColor="#FFFFFF"
        centerRadius={80}
      />
      <Styled(TouchableHighlight)
        centerBgColor="#FFFFFF"
        centerDisabledBgColor="#FAFAFA"
        centerRadius={80}
        centerStatus={false}
        onLongPress={[Function]}
        onPress={null}
        onPressOut={[Function]}
        radius={200}
        style={null}
        underlayColor="#FAFAFA"
      >
        <View />
      </Styled(TouchableHighlight)>
      <View
        pointerEvents="none"
        style={
          Object {
            "position": "absolute",
          }
        }
      >
        <TYText
          align={null}
          color={null}
          size={null}
          style={
            Array [
              Object {
                "color": "rgba(39,197,153,0.7)",
                "fontSize": 50,
                "fontWeight": "400",
              },
              null,
            ]
          }
          type={null}
          weight={null}
        >
          OK
        </TYText>
      </View>
    </Styled(View)>
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
  </View>
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
</Styled(View)>
`;

exports[`PressKey components componentWillReceiveProps1 1`] = `
<Styled(View)>
  <View
    onLayout={[Function]}
    style={
      Object {
        "opacity": 0,
        "position": "absolute",
      }
    }
  />
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
    <Styled(View)
      outBgColor="#F6F6F6"
      padding={8}
      radius={200}
    >
      <Styled(View)
        padding={8}
        radius={200}
        style={null}
      >
        <Styled(View)
          padding={8}
          radius={200}
          style={
            Array [
              null,
              Object {
                "overflow": "hidden",
                "transform": Array [
                  Object {
                    "rotate": "45deg",
                  },
                ],
              },
            ]
          }
        >
          <Styled(View)
            padding={8}
            radius={200}
          />
        </Styled(View)>
      </Styled(View)>
      <Styled(View)
        padding={8}
        radius={200}
      />
      <Styled(View)
        centerBgColor="#FFFFFF"
        centerRadius={80}
      />
      <Styled(TouchableHighlight)
        centerBgColor="#FFFFFF"
        centerDisabledBgColor="#FAFAFA"
        centerRadius={80}
        centerStatus={false}
        onLongPress={[Function]}
        onPress={null}
        onPressOut={[Function]}
        radius={200}
        style={null}
        underlayColor="#FAFAFA"
      >
        <AnimatedComponent
          key="center"
          style={
            Object {
              "position": "absolute",
              "transform": Array [
                Object {
                  "rotate": "1deg",
                },
              ],
            }
          }
        >
          <TYText
            align={null}
            color={null}
            size={null}
            style={
              Array [
                Object {
                  "color": "rgba(39,197,153,0.7)",
                  "fontSize": 50,
                  "fontWeight": "400",
                },
                null,
              ]
            }
            type={null}
            weight={null}
          >
            OK
          </TYText>
        </AnimatedComponent>
      </Styled(TouchableHighlight)>
    </Styled(View)>
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
  </View>
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
</Styled(View)>
`;

exports[`PressKey components content render 1`] = `
<Styled(View)>
  <View
    onLayout={[Function]}
    style={
      Object {
        "opacity": 0,
        "position": "absolute",
      }
    }
  />
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        Object {
          "color": "rgba(194,117,241,1)",
        },
      ]
    }
    type={null}
    weight={null}
  >
    left
  </TYText>
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          Object {
            "color": "rgba(194,117,241,1)",
          },
        ]
      }
      type={null}
      weight={null}
    >
      top
    </TYText>
    <Styled(View)
      outBgColor="#F6F6F6"
      padding={8}
      radius={200}
    >
      <Styled(View)
        padding={8}
        radius={200}
        style={null}
      >
        <Styled(View)
          padding={8}
          radius={200}
          style={
            Array [
              null,
              Object {
                "overflow": "hidden",
                "transform": Array [
                  Object {
                    "rotate": "45deg",
                  },
                ],
              },
            ]
          }
        >
          <Styled(View)
            padding={8}
            radius={200}
          />
        </Styled(View)>
      </Styled(View)>
      <Styled(View)
        padding={8}
        radius={200}
      />
      <Styled(View)
        centerBgColor="#FFFFFF"
        centerRadius={80}
      />
      <Styled(TouchableHighlight)
        centerBgColor="#FFFFFF"
        centerDisabledBgColor="#FAFAFA"
        centerRadius={80}
        centerStatus={true}
        onLongPress={[Function]}
        onPress={null}
        onPressOut={[Function]}
        radius={200}
        style={null}
        underlayColor="#FAFAFA"
      >
        <View />
      </Styled(TouchableHighlight)>
      <View
        pointerEvents="none"
        style={
          Object {
            "position": "absolute",
          }
        }
      >
        <TYText
          align={null}
          color={null}
          size={null}
          style={
            Array [
              Object {
                "color": "rgba(39,197,153,1)",
                "fontSize": 50,
                "fontWeight": "400",
              },
              Object {
                "color": "red",
                "fontSize": 32,
              },
            ]
          }
          type={null}
          weight={null}
        >
          OK
        </TYText>
      </View>
    </Styled(View)>
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          Object {
            "color": "rgba(194,117,241,1)",
          },
        ]
      }
      type={null}
      weight={null}
    >
      bottom
    </TYText>
  </View>
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        Object {
          "color": "rgba(194,117,241,1)",
        },
      ]
    }
    type={null}
    weight={null}
  >
    right
  </TYText>
</Styled(View)>
`;

exports[`PressKey components customize render 1`] = `
<Styled(View)>
  <View
    onLayout={[Function]}
    style={
      Object {
        "opacity": 0,
        "position": "absolute",
      }
    }
  />
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
    <Styled(View)
      outBgColor="rgba(246,206,95,0.3)"
      padding={20}
      radius={180}
    >
      <Styled(View)
        padding={20}
        radius={180}
        style={null}
      >
        <Styled(View)
          padding={20}
          radius={180}
          style={
            Array [
              null,
              Object {
                "overflow": "hidden",
                "transform": Array [
                  Object {
                    "rotate": "45deg",
                  },
                ],
              },
            ]
          }
        >
          <Styled(View)
            padding={20}
            radius={180}
          />
        </Styled(View)>
      </Styled(View)>
      <Styled(View)
        padding={20}
        radius={180}
      />
      <Styled(View)
        centerBgColor="rgba(194,117,241,1)"
        centerRadius={60}
      />
      <Styled(TouchableHighlight)
        centerBgColor="rgba(194,117,241,1)"
        centerDisabledBgColor="rgba(194,117,241,0.7)"
        centerRadius={60}
        centerStatus={true}
        onLongPress={[Function]}
        onPress={null}
        onPressOut={[Function]}
        radius={180}
        style={null}
        underlayColor="rgba(194,117,241,0.7)"
      >
        <View />
      </Styled(TouchableHighlight)>
      <View
        pointerEvents="none"
        style={
          Object {
            "position": "absolute",
          }
        }
      >
        <TYText
          align={null}
          color={null}
          size={null}
          style={
            Array [
              Object {
                "color": "rgba(39,197,153,1)",
                "fontSize": 50,
                "fontWeight": "400",
              },
              Object {
                "color": "white",
                "fontSize": 32,
              },
            ]
          }
          type={null}
          weight={null}
        >
          OK
        </TYText>
      </View>
    </Styled(View)>
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
  </View>
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
</Styled(View)>
`;

exports[`PressKey components onPress render 1`] = `
<Styled(View)>
  <View
    onLayout={[Function]}
    style={
      Object {
        "opacity": 0,
        "position": "absolute",
      }
    }
  />
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
    <Styled(View)
      outBgColor="#F6F6F6"
      padding={8}
      radius={200}
    >
      <Styled(View)
        padding={8}
        radius={200}
        style={null}
      >
        <Styled(View)
          padding={8}
          radius={200}
          style={
            Array [
              null,
              Object {
                "overflow": "hidden",
                "transform": Array [
                  Object {
                    "rotate": "45deg",
                  },
                ],
              },
            ]
          }
        >
          <Styled(View)
            padding={8}
            radius={200}
          />
        </Styled(View)>
      </Styled(View)>
      <Styled(View)
        padding={8}
        radius={200}
      />
      <Styled(View)
        centerBgColor="#FFFFFF"
        centerRadius={80}
      />
      <Styled(TouchableHighlight)
        centerBgColor="#FFFFFF"
        centerDisabledBgColor="#FAFAFA"
        centerRadius={80}
        centerStatus={false}
        onLongPress={[Function]}
        onPress={null}
        onPressOut={[Function]}
        radius={200}
        style={null}
        underlayColor="#FAFAFA"
      >
        <View />
      </Styled(TouchableHighlight)>
      <View
        pointerEvents="none"
        style={
          Object {
            "position": "absolute",
          }
        }
      >
        <TYText
          align={null}
          color={null}
          size={null}
          style={
            Array [
              Object {
                "color": "rgba(39,197,153,0.7)",
                "fontSize": 50,
                "fontWeight": "400",
              },
              null,
            ]
          }
          type={null}
          weight={null}
        >
          OK
        </TYText>
      </View>
    </Styled(View)>
    <TYText
      align={null}
      color={null}
      size={null}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "color": "rgb(104,104,104)",
            "fontSize": 30,
          },
          null,
        ]
      }
      type={null}
      weight={null}
    />
  </View>
  <TYText
    align={null}
    color={null}
    size={null}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "color": "rgb(104,104,104)",
          "fontSize": 30,
        },
        null,
      ]
    }
    type={null}
    weight={null}
  />
</Styled(View)>
`;
